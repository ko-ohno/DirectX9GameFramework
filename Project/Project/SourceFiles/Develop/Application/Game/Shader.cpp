/*=============================================================================
/*-----------------------------------------------------------------------------
/*	[Shader.cpp]　シェーダクラス
/*	Author：Kousuke,Ohno.
/*-----------------------------------------------------------------------------
/*	説明：シェーダクラス
=============================================================================*/

/*--- インクルードファイル ---*/
#include "../../StdAfx.h"
#include "Shader.h"

/*-----------------------------------------------------------------------------
/* コンストラクタ
-----------------------------------------------------------------------------*/
Shader::Shader(class ShaderManager* manager)
	: manager_(manager)
	, lpd3d_vertex_declaration_(nullptr)
	, shader_(nullptr)
{
}

/*-----------------------------------------------------------------------------
/* デストラクタ
-----------------------------------------------------------------------------*/
Shader::~Shader(void)
{
	this->Uninit();
}

/*-----------------------------------------------------------------------------
/* 初期化処理
-----------------------------------------------------------------------------*/
bool Shader::Init(const LPDIRECT3DDEVICE9& lpd3d_device)
{
	UNREFERENCED_PARAMETER(lpd3d_device);
	return true;
}

/*-----------------------------------------------------------------------------
/* 終了化処理
-----------------------------------------------------------------------------*/
void Shader::Uninit(void)
{
	if (lpd3d_vertex_declaration_ != nullptr)
	{
		SAFE_RELEASE_(lpd3d_vertex_declaration_);
	}

	if (shader_ != nullptr)
	{
		SAFE_RELEASE_(shader_);
	}
}

/*-----------------------------------------------------------------------------
/* シェーダーのセット
-----------------------------------------------------------------------------*/
void Shader::ShaderSet(class Camera* camera , RendererComponent* rendererComponent, Texture* texture)
{
	UNREFERENCED_PARAMETER(camera);
	UNREFERENCED_PARAMETER(rendererComponent);
	UNREFERENCED_PARAMETER(texture);
}

/*-----------------------------------------------------------------------------
/* シェーダーパスの開始処理
-----------------------------------------------------------------------------*/
void Shader::ShaderPassBegin(int shaderPassNumber)
{
	shader_->Begin(nullptr, 0);
	shader_->BeginPass(shaderPassNumber);
}

/*-----------------------------------------------------------------------------
/* シェーダーパスの終了処理
-----------------------------------------------------------------------------*/
void Shader::ShaderPassEnd(void)
{
	shader_->EndPass();
	shader_->End();
}

/*=============================================================================
/*		End of File
=============================================================================*/