/*=============================================================================
/*-----------------------------------------------------------------------------
/*	[ActorManager.cpp] アクター管理クラス
/*	Author：Kousuke,Ohno.
/*-----------------------------------------------------------------------------
/*	説明：アクター管理クラス
=============================================================================*/

/*--- インクルードファイル ---*/
#include "../../../StdAfx.h"
#include "ActorManager.h"

/*-----------------------------------------------------------------------------
/* コンストラクタ
-----------------------------------------------------------------------------*/
ActorManager::ActorManager(Game* game)
	: game_(game)
{
}

/*-----------------------------------------------------------------------------
/* デストラクタ
-----------------------------------------------------------------------------*/
ActorManager::~ActorManager(void)
{
}

/*-----------------------------------------------------------------------------
/* ファクトリメソッド
-----------------------------------------------------------------------------*/
ActorManager* ActorManager::Create(Game* game)
{
	return NEW ActorManager(game);
}

/*-----------------------------------------------------------------------------
/* 起動処理
-----------------------------------------------------------------------------*/
bool ActorManager::StartUp(void)
{
	//自身の初期化
	const bool Enemie_manager_init = this->Init();
	if (Enemie_manager_init == false)
	{
		assert(!"ActorManager::StartUp()：アクターーマネージャの初期化に失敗しました。");
		return false;
	}
	return true;
}

/*-----------------------------------------------------------------------------
/* 停止処理
-----------------------------------------------------------------------------*/
void ActorManager::Shutdown(void)
{
	this->Uninit();
}

/*-----------------------------------------------------------------------------
/* 初期化処理
-----------------------------------------------------------------------------*/
bool ActorManager::Init(void)
{
	//自身の初期化
	{
		actor_list_.clear();
	}
	return true;
}

/*-----------------------------------------------------------------------------
/* 終了化処理
-----------------------------------------------------------------------------*/
void ActorManager::Uninit(void)
{
}

/*-----------------------------------------------------------------------------
/* アクターゲームオブジェクトのアドレスの追加処理
-----------------------------------------------------------------------------*/
void ActorManager::AddActorGameObjectAddress(Actor* Actor)
{
	actor_list_.emplace_back(Actor);
}

/*-----------------------------------------------------------------------------
/* アクターゲームオブジェクトのアドレスの削除処理
-----------------------------------------------------------------------------*/
void ActorManager::RemoveActorGameObjectAddress(Actor* Actor)
{
	auto iter = std::find(actor_list_.begin() //範囲0〜
						 , actor_list_.end()  //範囲最大まで
						 , Actor);			   //探す対象

	if (iter != actor_list_.end())
	{
		actor_list_.erase(iter);
	}
}

/*=============================================================================
/*		End of File
=============================================================================*/