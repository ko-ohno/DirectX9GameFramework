/*=============================================================================
/*-----------------------------------------------------------------------------
/*	[DebugSystem.h] デバッグシステム
/*	Author：Kousuke,Ohno.
/*-----------------------------------------------------------------------------
/*	説明：デバッグシステム
=============================================================================*/
#ifndef DEBUG_SYSTEM_H_
#define	DEBUG_SYSTEM_H_

/*--- インクルードファイル ---*/

/*--- 構造体定義 ---*/

/*--- クラスの前方宣言 ---*/

/*--- マクロ定義 ---*/

// 組み込みマクロの展開先を制御するために、文字列操作をするための関数を、マクロ定義に内包させた。

// ※パラメータには、char*型配列か、std::string型を渡してください。
// OUTPUT_ERROR_MSG()は、このマクロの呼び出し先の
// "ソースファイル名" と "行番号" と "関数名" および、このマクロの"引数に定義したエラー内容の文字列" を含む
// std::string型の文字列データを出力します.。
#define OUTPUT_ERROR_MSG(errorMsg) (DebugSystem::OutputErrorString(errorMsg, __FILE__, __LINE__, __FUNCTION__));

/*-------------------------------------
/* デバッグシステム
-------------------------------------*/
namespace DebugSystem
{
	// OutputErrorString()は、エラーダイアログ用の文字列を生成します。
	// 1番目のパラメータには、エラー内容となる文字列データを入力。
	// 2番目のパラメータには、この関数の呼び出し先のファイル名を入力。
	// 3番目のパラメータには、この関数の呼び出し先の行番号を入力。
	// 3番目のパラメータには、この関数を呼び出した関数名を入力
	// 戻り値は、すべてのパラメータを結合した、エラーダイアログ用の文字列を生成します。
	std::string OutputErrorString(std::string inErrorMsg
						         , std::string inFileName
						         , int inLineNumber
						         , std::string inFunctionName);
};


#endif //DEBUG_SYSTEM_H_
/*=============================================================================
/*		End of File
=============================================================================*/
